{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5b4c0bbb",
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "378265f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import re\n",
    "from sqlalchemy import create_engine"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d9fd75d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import psycopg2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "21772144",
   "metadata": {},
   "outputs": [],
   "source": [
    "from config import db_password"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "03ec611b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4ce279e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#create function that takes Wiki data, Kaggle data and MovieLens rating data\n",
    "#Step 1\n",
    "kaggle_file = pd.read_csv(\"movies_metadata.csv\", low_memory=False)\n",
    "ratings_file = pd.read_csv(\"ratings.csv\")\n",
    "\n",
    "def extract_transform_load():\n",
    "    kaggle_file = pd.read_csv(\"movies_metadata.csv\", low_memory=False)\n",
    "\n",
    "    ratings_file = pd.read_csv(\"ratings.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8e4d25c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open (\"wikipedia-movies.json\", mode='r') as file:\n",
    "    wiki_file = json.load(file)\n",
    "    \n",
    "def extract():\n",
    "    #Step 2, read kaggle and movielens as DF\n",
    "    kaggle_df = pd.DataFrame(kaggle_file)\n",
    "    ratings_df = pd.DataFrame(ratings_file)\n",
    "    #Step 3 - open wiki data\n",
    "    with open (\"wikipedia-movies.json\", mode='r') as file:\n",
    "        wiki_file = json.load(file)\n",
    "        #Step - read wiki movies as DF\n",
    "        wiki_movies_df = pd.DataFrame(wiki_file)\n",
    "#Step 5, return three DFs\n",
    "    return wiki_movies_df, kaggle_df, ratings_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "786ecf79",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "kaggle_df = pd.DataFrame(kaggle_file)\n",
    "ratings_df = pd.DataFrame(ratings_file)\n",
    "wiki_movies_df = pd.DataFrame(wiki_file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "68c159ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>url</th>\n",
       "      <th>year</th>\n",
       "      <th>imdb_link</th>\n",
       "      <th>title</th>\n",
       "      <th>Directed by</th>\n",
       "      <th>Produced by</th>\n",
       "      <th>Screenplay by</th>\n",
       "      <th>Story by</th>\n",
       "      <th>Based on</th>\n",
       "      <th>Starring</th>\n",
       "      <th>...</th>\n",
       "      <th>Predecessor</th>\n",
       "      <th>Founders</th>\n",
       "      <th>Area served</th>\n",
       "      <th>Products</th>\n",
       "      <th>Services</th>\n",
       "      <th>Russian</th>\n",
       "      <th>Hebrew</th>\n",
       "      <th>Revenue</th>\n",
       "      <th>Operating income</th>\n",
       "      <th>Polish</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>https://en.wikipedia.org/wiki/The_Adventures_o...</td>\n",
       "      <td>1990.0</td>\n",
       "      <td>https://www.imdb.com/title/tt0098987/</td>\n",
       "      <td>The Adventures of Ford Fairlane</td>\n",
       "      <td>Renny Harlin</td>\n",
       "      <td>[Steve Perry, Joel Silver]</td>\n",
       "      <td>[David Arnott, James Cappe, Daniel Waters]</td>\n",
       "      <td>[David Arnott, James Cappe]</td>\n",
       "      <td>[Characters, by Rex Weiner]</td>\n",
       "      <td>[Andrew Dice Clay, Wayne Newton, Priscilla Pre...</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>https://en.wikipedia.org/wiki/After_Dark,_My_S...</td>\n",
       "      <td>1990.0</td>\n",
       "      <td>https://www.imdb.com/title/tt0098994/</td>\n",
       "      <td>After Dark, My Sweet</td>\n",
       "      <td>James Foley</td>\n",
       "      <td>[Ric Kidney, Robert Redlin]</td>\n",
       "      <td>[James Foley, Robert Redlin]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[the novel, After Dark, My Sweet, by, Jim Thom...</td>\n",
       "      <td>[Jason Patric, Rachel Ward, Bruce Dern, George...</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>https://en.wikipedia.org/wiki/Air_America_(film)</td>\n",
       "      <td>1990.0</td>\n",
       "      <td>https://www.imdb.com/title/tt0099005/</td>\n",
       "      <td>Air America</td>\n",
       "      <td>Roger Spottiswoode</td>\n",
       "      <td>Daniel Melnick</td>\n",
       "      <td>[John Eskow, Richard Rush]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[Air America, by, Christopher Robbins]</td>\n",
       "      <td>[Mel Gibson, Robert Downey Jr., Nancy Travis, ...</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>https://en.wikipedia.org/wiki/Alice_(1990_film)</td>\n",
       "      <td>1990.0</td>\n",
       "      <td>https://www.imdb.com/title/tt0099012/</td>\n",
       "      <td>Alice</td>\n",
       "      <td>Woody Allen</td>\n",
       "      <td>Robert Greenhut</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[Alec Baldwin, Blythe Danner, Judy Davis, Mia ...</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>https://en.wikipedia.org/wiki/Almost_an_Angel</td>\n",
       "      <td>1990.0</td>\n",
       "      <td>https://www.imdb.com/title/tt0099018/</td>\n",
       "      <td>Almost an Angel</td>\n",
       "      <td>John Cornell</td>\n",
       "      <td>John Cornell</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[Paul Hogan, Elias Koteas, Linda Kozlowski]</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7306</th>\n",
       "      <td>https://en.wikipedia.org/wiki/Holmes_%26_Watson</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>https://www.imdb.com/title/tt1255919/</td>\n",
       "      <td>Holmes &amp; Watson</td>\n",
       "      <td>Etan Cohen</td>\n",
       "      <td>[Will Ferrell, Adam McKay, Jimmy Miller, Clayt...</td>\n",
       "      <td>Etan Cohen</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[Sherlock Holmes, and, Dr. Watson, by, Sir Art...</td>\n",
       "      <td>[Will Ferrell, John C. Reilly, Rebecca Hall, R...</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7307</th>\n",
       "      <td>https://en.wikipedia.org/wiki/Vice_(2018_film)</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>https://www.imdb.com/title/tt6266538/</td>\n",
       "      <td>Vice</td>\n",
       "      <td>Adam McKay</td>\n",
       "      <td>[Brad Pitt, Dede Gardner, Jeremy Kleiner, Kevi...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[Christian Bale, Amy Adams, Steve Carell, Sam ...</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7308</th>\n",
       "      <td>https://en.wikipedia.org/wiki/On_the_Basis_of_Sex</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>https://www.imdb.com/title/tt4669788/</td>\n",
       "      <td>On the Basis of Sex</td>\n",
       "      <td>Mimi Leder</td>\n",
       "      <td>Robert W. Cort</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[Felicity Jones, Armie Hammer, Justin Theroux,...</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7309</th>\n",
       "      <td>https://en.wikipedia.org/wiki/Destroyer_(2018_...</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>https://www.imdb.com/title/tt7137380/</td>\n",
       "      <td>Destroyer</td>\n",
       "      <td>Karyn Kusama</td>\n",
       "      <td>[Fred Berger, Phil Hay, Matt Manfredi]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[Nicole Kidman, Sebastian Stan, Toby Kebbell, ...</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7310</th>\n",
       "      <td>https://en.wikipedia.org/wiki/Black_Mirror:_Ba...</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>https://www.imdb.com/title/tt9495224/</td>\n",
       "      <td>Bandersnatch</td>\n",
       "      <td>David Slade</td>\n",
       "      <td>Russell McLean</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[Fionn Whitehead, Will Poulter, Craig Parkinso...</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7311 rows × 193 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    url    year  \\\n",
       "0     https://en.wikipedia.org/wiki/The_Adventures_o...  1990.0   \n",
       "1     https://en.wikipedia.org/wiki/After_Dark,_My_S...  1990.0   \n",
       "2      https://en.wikipedia.org/wiki/Air_America_(film)  1990.0   \n",
       "3       https://en.wikipedia.org/wiki/Alice_(1990_film)  1990.0   \n",
       "4         https://en.wikipedia.org/wiki/Almost_an_Angel  1990.0   \n",
       "...                                                 ...     ...   \n",
       "7306    https://en.wikipedia.org/wiki/Holmes_%26_Watson  2018.0   \n",
       "7307     https://en.wikipedia.org/wiki/Vice_(2018_film)  2018.0   \n",
       "7308  https://en.wikipedia.org/wiki/On_the_Basis_of_Sex  2018.0   \n",
       "7309  https://en.wikipedia.org/wiki/Destroyer_(2018_...  2018.0   \n",
       "7310  https://en.wikipedia.org/wiki/Black_Mirror:_Ba...  2018.0   \n",
       "\n",
       "                                  imdb_link                            title  \\\n",
       "0     https://www.imdb.com/title/tt0098987/  The Adventures of Ford Fairlane   \n",
       "1     https://www.imdb.com/title/tt0098994/             After Dark, My Sweet   \n",
       "2     https://www.imdb.com/title/tt0099005/                      Air America   \n",
       "3     https://www.imdb.com/title/tt0099012/                            Alice   \n",
       "4     https://www.imdb.com/title/tt0099018/                  Almost an Angel   \n",
       "...                                     ...                              ...   \n",
       "7306  https://www.imdb.com/title/tt1255919/                  Holmes & Watson   \n",
       "7307  https://www.imdb.com/title/tt6266538/                             Vice   \n",
       "7308  https://www.imdb.com/title/tt4669788/              On the Basis of Sex   \n",
       "7309  https://www.imdb.com/title/tt7137380/                        Destroyer   \n",
       "7310  https://www.imdb.com/title/tt9495224/                     Bandersnatch   \n",
       "\n",
       "             Directed by                                        Produced by  \\\n",
       "0           Renny Harlin                         [Steve Perry, Joel Silver]   \n",
       "1            James Foley                        [Ric Kidney, Robert Redlin]   \n",
       "2     Roger Spottiswoode                                     Daniel Melnick   \n",
       "3            Woody Allen                                    Robert Greenhut   \n",
       "4           John Cornell                                       John Cornell   \n",
       "...                  ...                                                ...   \n",
       "7306          Etan Cohen  [Will Ferrell, Adam McKay, Jimmy Miller, Clayt...   \n",
       "7307          Adam McKay  [Brad Pitt, Dede Gardner, Jeremy Kleiner, Kevi...   \n",
       "7308          Mimi Leder                                     Robert W. Cort   \n",
       "7309        Karyn Kusama             [Fred Berger, Phil Hay, Matt Manfredi]   \n",
       "7310         David Slade                                     Russell McLean   \n",
       "\n",
       "                                   Screenplay by                     Story by  \\\n",
       "0     [David Arnott, James Cappe, Daniel Waters]  [David Arnott, James Cappe]   \n",
       "1                   [James Foley, Robert Redlin]                          NaN   \n",
       "2                     [John Eskow, Richard Rush]                          NaN   \n",
       "3                                            NaN                          NaN   \n",
       "4                                            NaN                          NaN   \n",
       "...                                          ...                          ...   \n",
       "7306                                  Etan Cohen                          NaN   \n",
       "7307                                         NaN                          NaN   \n",
       "7308                                         NaN                          NaN   \n",
       "7309                                         NaN                          NaN   \n",
       "7310                                         NaN                          NaN   \n",
       "\n",
       "                                               Based on  \\\n",
       "0                           [Characters, by Rex Weiner]   \n",
       "1     [the novel, After Dark, My Sweet, by, Jim Thom...   \n",
       "2                [Air America, by, Christopher Robbins]   \n",
       "3                                                   NaN   \n",
       "4                                                   NaN   \n",
       "...                                                 ...   \n",
       "7306  [Sherlock Holmes, and, Dr. Watson, by, Sir Art...   \n",
       "7307                                                NaN   \n",
       "7308                                                NaN   \n",
       "7309                                                NaN   \n",
       "7310                                                NaN   \n",
       "\n",
       "                                               Starring  ... Predecessor  \\\n",
       "0     [Andrew Dice Clay, Wayne Newton, Priscilla Pre...  ...         NaN   \n",
       "1     [Jason Patric, Rachel Ward, Bruce Dern, George...  ...         NaN   \n",
       "2     [Mel Gibson, Robert Downey Jr., Nancy Travis, ...  ...         NaN   \n",
       "3     [Alec Baldwin, Blythe Danner, Judy Davis, Mia ...  ...         NaN   \n",
       "4           [Paul Hogan, Elias Koteas, Linda Kozlowski]  ...         NaN   \n",
       "...                                                 ...  ...         ...   \n",
       "7306  [Will Ferrell, John C. Reilly, Rebecca Hall, R...  ...         NaN   \n",
       "7307  [Christian Bale, Amy Adams, Steve Carell, Sam ...  ...         NaN   \n",
       "7308  [Felicity Jones, Armie Hammer, Justin Theroux,...  ...         NaN   \n",
       "7309  [Nicole Kidman, Sebastian Stan, Toby Kebbell, ...  ...         NaN   \n",
       "7310  [Fionn Whitehead, Will Poulter, Craig Parkinso...  ...         NaN   \n",
       "\n",
       "     Founders Area served Products Services Russian Hebrew Revenue  \\\n",
       "0         NaN         NaN      NaN      NaN     NaN    NaN     NaN   \n",
       "1         NaN         NaN      NaN      NaN     NaN    NaN     NaN   \n",
       "2         NaN         NaN      NaN      NaN     NaN    NaN     NaN   \n",
       "3         NaN         NaN      NaN      NaN     NaN    NaN     NaN   \n",
       "4         NaN         NaN      NaN      NaN     NaN    NaN     NaN   \n",
       "...       ...         ...      ...      ...     ...    ...     ...   \n",
       "7306      NaN         NaN      NaN      NaN     NaN    NaN     NaN   \n",
       "7307      NaN         NaN      NaN      NaN     NaN    NaN     NaN   \n",
       "7308      NaN         NaN      NaN      NaN     NaN    NaN     NaN   \n",
       "7309      NaN         NaN      NaN      NaN     NaN    NaN     NaN   \n",
       "7310      NaN         NaN      NaN      NaN     NaN    NaN     NaN   \n",
       "\n",
       "     Operating income Polish  \n",
       "0                 NaN    NaN  \n",
       "1                 NaN    NaN  \n",
       "2                 NaN    NaN  \n",
       "3                 NaN    NaN  \n",
       "4                 NaN    NaN  \n",
       "...               ...    ...  \n",
       "7306              NaN    NaN  \n",
       "7307              NaN    NaN  \n",
       "7308              NaN    NaN  \n",
       "7309              NaN    NaN  \n",
       "7310              NaN    NaN  \n",
       "\n",
       "[7311 rows x 193 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#felt cute, must delete\n",
    "wiki_movies_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e915424a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#---Step 6, create path to file directory\n",
    "#file_dir = '/Users/visions/Movies-ETL'\n",
    "\n",
    "wiki_file = 'wikipedia-movies.json'\n",
    "kaggle_file = 'movies_metadata.csv'\n",
    "ratings_file = 'ratings.csv'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e70ca9c8",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "cannot unpack non-iterable NoneType object",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/sf/szcr4fws0w7_1ftxzmwszrf00000gn/T/ipykernel_55838/2616313564.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#---Step 7, set all three variables equal to ETL -- not sure here\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mwiki_file\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkaggle_file\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mratings_file\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mextract_transform_load\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: cannot unpack non-iterable NoneType object"
     ]
    }
   ],
   "source": [
    "#---Step 7, set all three variables equal to ETL -- not sure here\n",
    "wiki_file, kaggle_file, ratings_file = extract_transform_load()\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9eb2bd4f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#---Step 8, set all DFs from return statement equal to file names in S6\n",
    "wiki_movies_df = wiki_file\n",
    "kaggle_metadata = kaggle_file\n",
    "ratings = ratings_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ec342c17",
   "metadata": {},
   "outputs": [],
   "source": [
    "#---Step 9 \n",
    "wiki_movies_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a4a028f6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#---Step 10\n",
    "kaggle_metadata.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2dcf4d9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#---Step 11\n",
    "ratings.head()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "PythonData",
   "language": "python",
   "name": "pythondata"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
